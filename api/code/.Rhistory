dta %>%
filterOES(state, naicsCode, industryGroup, occupation) %>%
dplyr::mutate(
a_calc_tot = tot_emp * a_mean,
h_calc_tot = tot_emp * h_mean
) %>%
{print(.$a_calc_tot);. } %>%
{print(.$a_mean); .} %>%
{print(.$tot_emp); .} %>%
dplyr::group_by(area_title, naics, naics_title, i_group) %>%
dplyr::summarise(
tot_emp = sum(tot_emp),
a_calc_mean = sum(a_calc_tot, na.rm = T)/tot_emp,
h_calc_mean = sum(h_calc_tot, na.rm = T)/tot_emp
) %>%
dplyr::ungroup() %>%
dplyr::mutate(hasChildren = purrr::map_dbl(naics, countChildrenIndustry, dta = dta, state = state, industry = industry, occupation = occupation)) %>%
dplyr::mutate(hasOccupations = purrr::map_dbl(naics, countIndustryOccupation, dta = dta, state = state, industry = industry, occupation = occupation))
getIndustryHierarchy <- function(dta, state, naicsCode, industry = 3, occupation = 'major'){
if(industry <= 2) return("industry must be > 2")
if(stringr::str_detect(naicsCode, '-')){
naicsCode <- stringr::str_replace(naicsCode, '-', '|^' )
naicsCode <- paste0('^', naicsCode)
} else {
naicsCode <- stringr::str_extract(naicsCode, paste0('^.{', industry -1 ,'}'))
naicsCode <- paste0('^', naicsCode)
}
industryGroup <- paste0(industry, '-digit')
dta %>%
filterOES(state, naicsCode, industryGroup, occupation) %>%
dplyr::mutate(
a_calc_tot = tot_emp * a_mean,
h_calc_tot = tot_emp * h_mean
) %>%
{print(.$a_calc_tot);. } %>%
{print(.$a_mean); .} %>%
{print(.$tot_emp); .} %>%
dplyr::group_by(area_title, naics, naics_title, i_group) %>%
dplyr::summarise(
tot_emp = sum(tot_emp),
a_calc_mean = sum(a_calc_tot, na.rm = T)/tot_emp,
h_calc_mean = sum(h_calc_tot, na.rm = T)/tot_emp
) %>%
dplyr::ungroup() %>%
dplyr::mutate(hasChildren = purrr::map_dbl(naics, countChildrenIndustry, dta = dta, state = state, industry = industry, occupation = occupation)) %>%
dplyr::mutate(hasOccupations = purrr::map_dbl(naics, countIndustryOccupation, dta = dta, state = state, industry = industry, occupation = occupation))
}
# dplyr::mutate(hasOccupations = purrr::map_dbl(naics, function(naic){
#   nCode <- stringr::str_extract(naic, paste0('^.{', industry, '}'))
#   nOccupations <- dta %>%
#     filterOES(state, nCode, industryGroup, occupation) %>%
#     .$occ.code %>%
#     unique %>%
#     length
#
#   nOccupations
# }))
getIndustryHierarchy(oes, 'Pennsylvania', '237130', industry=3)
94140 * 56660
str(oes'=')
str(oes)
dta %>%
filterOES(state, naicsCode, industryGroup, occupation) %>%
dplyr::mutate(
a_mean = as.double(a_mean),
h_mean = as.double(h_mean),
a_calc_tot = tot_emp * a_mean,
h_calc_tot = tot_emp * h_mean
) %>%
{print(.$a_calc_tot);. } %>%
{print(.$a_mean); .} %>%
{print(.$tot_emp); .} %>%
dplyr::group_by(area_title, naics, naics_title, i_group) %>%
dplyr::summarise(
tot_emp = sum(tot_emp),
a_calc_mean = sum(a_calc_tot, na.rm = T)/tot_emp,
h_calc_mean = sum(h_calc_tot, na.rm = T)/tot_emp
) %>%
dplyr::ungroup() %>%
dplyr::mutate(hasChildren = purrr::map_dbl(naics, countChildrenIndustry, dta = dta, state = state, industry = industry, occupation = occupation)) %>%
dplyr::mutate(hasOccupations = purrr::map_dbl(naics, countIndustryOccupation, dta = dta, state = state, industry = industry, occupation = occupation))
getIndustryHierarchy <- function(dta, state, naicsCode, industry = 3, occupation = 'major'){
if(industry <= 2) return("industry must be > 2")
if(stringr::str_detect(naicsCode, '-')){
naicsCode <- stringr::str_replace(naicsCode, '-', '|^' )
naicsCode <- paste0('^', naicsCode)
} else {
naicsCode <- stringr::str_extract(naicsCode, paste0('^.{', industry -1 ,'}'))
naicsCode <- paste0('^', naicsCode)
}
industryGroup <- paste0(industry, '-digit')
dta %>%
filterOES(state, naicsCode, industryGroup, occupation) %>%
dplyr::mutate(
a_mean = as.double(a_mean),
h_mean = as.double(h_mean),
a_calc_tot = tot_emp * a_mean,
h_calc_tot = tot_emp * h_mean
) %>%
{print(.$a_calc_tot);. } %>%
{print(.$a_mean); .} %>%
{print(.$tot_emp); .} %>%
dplyr::group_by(area_title, naics, naics_title, i_group) %>%
dplyr::summarise(
tot_emp = sum(tot_emp),
a_calc_mean = sum(a_calc_tot, na.rm = T)/tot_emp,
h_calc_mean = sum(h_calc_tot, na.rm = T)/tot_emp
) %>%
dplyr::ungroup() %>%
dplyr::mutate(hasChildren = purrr::map_dbl(naics, countChildrenIndustry, dta = dta, state = state, industry = industry, occupation = occupation)) %>%
dplyr::mutate(hasOccupations = purrr::map_dbl(naics, countIndustryOccupation, dta = dta, state = state, industry = industry, occupation = occupation))
}
# dplyr::mutate(hasOccupations = purrr::map_dbl(naics, function(naic){
#   nCode <- stringr::str_extract(naic, paste0('^.{', industry, '}'))
#   nOccupations <- dta %>%
#     filterOES(state, nCode, industryGroup, occupation) %>%
#     .$occ.code %>%
#     unique %>%
#     length
#
#   nOccupations
# }))
getIndustryHierarchy(oes, 'Pennsylvania', '237130', industry=3)
dta %>%
filterOES(state, naicsCode, industryGroup, occupation) %>%
dplyr::mutate(
a_mean = as.double(a_mean),
h_mean = as.double(h_mean),
a_calc_tot = tot_emp * a_mean,
h_calc_tot = tot_emp * h_mean
) %>%
{print(.$a_calc_tot);. } %>%
{print(.$a_mean); .} %>%
{print(.$tot_emp); .} %>%
dplyr::group_by(area_title, naics, naics_title, i_group) %>%
dplyr::summarise(
tot_emp = sum(tot_emp),
a_calc_mean = sum(a_calc_tot)/tot_emp,
h_calc_mean = sum(h_calc_tot)/tot_emp
) %>%
dplyr::ungroup() %>%
dplyr::mutate(hasChildren = purrr::map_dbl(naics, countChildrenIndustry, dta = dta, state = state, industry = industry, occupation = occupation)) %>%
dplyr::mutate(hasOccupations = purrr::map_dbl(naics, countIndustryOccupation, dta = dta, state = state, industry = industry, occupation = occupation))
getIndustryHierarchy <- function(dta, state, naicsCode, industry = 3, occupation = 'major'){
if(industry <= 2) return("industry must be > 2")
if(stringr::str_detect(naicsCode, '-')){
naicsCode <- stringr::str_replace(naicsCode, '-', '|^' )
naicsCode <- paste0('^', naicsCode)
} else {
naicsCode <- stringr::str_extract(naicsCode, paste0('^.{', industry -1 ,'}'))
naicsCode <- paste0('^', naicsCode)
}
industryGroup <- paste0(industry, '-digit')
dta %>%
filterOES(state, naicsCode, industryGroup, occupation) %>%
dplyr::mutate(
a_mean = as.double(a_mean),
h_mean = as.double(h_mean),
a_calc_tot = tot_emp * a_mean,
h_calc_tot = tot_emp * h_mean
) %>%
{print(.$a_calc_tot);. } %>%
{print(.$a_mean); .} %>%
{print(.$tot_emp); .} %>%
dplyr::group_by(area_title, naics, naics_title, i_group) %>%
dplyr::summarise(
tot_emp = sum(tot_emp),
a_calc_mean = sum(a_calc_tot)/tot_emp,
h_calc_mean = sum(h_calc_tot)/tot_emp
) %>%
dplyr::ungroup() %>%
dplyr::mutate(hasChildren = purrr::map_dbl(naics, countChildrenIndustry, dta = dta, state = state, industry = industry, occupation = occupation)) %>%
dplyr::mutate(hasOccupations = purrr::map_dbl(naics, countIndustryOccupation, dta = dta, state = state, industry = industry, occupation = occupation))
}
# dplyr::mutate(hasOccupations = purrr::map_dbl(naics, function(naic){
#   nCode <- stringr::str_extract(naic, paste0('^.{', industry, '}'))
#   nOccupations <- dta %>%
#     filterOES(state, nCode, industryGroup, occupation) %>%
#     .$occ.code %>%
#     unique %>%
#     length
#
#   nOccupations
# }))
getIndustryHierarchy(oes, 'Pennsylvania', '237130', industry=3)
dta %>%
filterOES(state, naicsCode, industryGroup, occupation) %>%
dplyr::mutate(
a_mean = as.double(a_mean),
h_mean = as.double(h_mean),
a_calc_tot = tot_emp * a_mean,
h_calc_tot = tot_emp * h_mean
) %>%
dplyr::group_by(area_title, naics, naics_title, i_group) %>%
dplyr::summarise(
tot_emp = sum(tot_emp),
a_calc_mean = sum(a_calc_tot)/tot_emp,
h_calc_mean = sum(h_calc_tot)/tot_emp
) %>%
dplyr::ungroup() %>%
dplyr::mutate(hasChildren = purrr::map_dbl(naics, countChildrenIndustry, dta = dta, state = state, industry = industry, occupation = occupation)) %>%
dplyr::mutate(hasOccupations = purrr::map_dbl(naics, countIndustryOccupation, dta = dta, state = state, industry = industry, occupation = occupation))
getIndustryHierarchy <- function(dta, state, naicsCode, industry = 3, occupation = 'major'){
if(industry <= 2) return("industry must be > 2")
if(stringr::str_detect(naicsCode, '-')){
naicsCode <- stringr::str_replace(naicsCode, '-', '|^' )
naicsCode <- paste0('^', naicsCode)
} else {
naicsCode <- stringr::str_extract(naicsCode, paste0('^.{', industry -1 ,'}'))
naicsCode <- paste0('^', naicsCode)
}
industryGroup <- paste0(industry, '-digit')
dta %>%
filterOES(state, naicsCode, industryGroup, occupation) %>%
dplyr::mutate(
a_mean = as.double(a_mean),
h_mean = as.double(h_mean),
a_calc_tot = tot_emp * a_mean,
h_calc_tot = tot_emp * h_mean
) %>%
dplyr::group_by(area_title, naics, naics_title, i_group) %>%
dplyr::summarise(
tot_emp = sum(tot_emp),
a_calc_mean = sum(a_calc_tot)/tot_emp,
h_calc_mean = sum(h_calc_tot)/tot_emp
) %>%
dplyr::ungroup() %>%
dplyr::mutate(hasChildren = purrr::map_dbl(naics, countChildrenIndustry, dta = dta, state = state, industry = industry, occupation = occupation)) %>%
dplyr::mutate(hasOccupations = purrr::map_dbl(naics, countIndustryOccupation, dta = dta, state = state, industry = industry, occupation = occupation))
}
getIndustryHierarchy(oes, 'Pennsylvania', '237130', industry=3)
industryOccupation <- function(dta, naic, state, industry, occupation){
nCode <- stringr::str_extract(naic, paste0('^.{', industry, '}'))
iGroup <- paste0(industry, '-digit')
nOccupations <- dta %>%
filterOES(state, nCode, iGroup, occupation)
nOccupations
}
industryOccupation(oes, '236000', 'Pennsylvania', 3, 'major')
industryOccupation <- function(dta, naic, state, industry, occupation){
nCode <- stringr::str_extract(naic, paste0('^.{', industry, '}'))
iGroup <- paste0(industry, '-digit')
occupations <- dta %>%
filterOES(state, nCode, iGroup, occupation)
occupations
}
countIndustryOccupation <- function(dta, naic, state, industry, occupation){
nOccuptions <- industryOccupation(dta, naic, state, industry, occupation) %>%
nrow()
nOccupations
}
countIndustryOccupation(oes, '236000', 'Pennsylvania', 3, 'major')
countIndustryOccupation <- function(dta, naic, state, industry, occupation){
nOccupations <- industryOccupation(dta, naic, state, industry, occupation) %>%
nrow()
nOccupations
}
industryOccupation(oes, '236000', 'Pennsylvania', 3, 'major')
countIndustryOccupation(oes, '236000', 'Pennsylvania', 3, 'major')
industryOccupation(oes, '236000', 'Alaska', 3, 'major')
countIndustryOccupation(oes, '236000', 'Alaska', 3, 'major')
#using read.csv instead of readr::read_csv give
oes <- read.csv('../data/oes_clean_nona.csv', stringsAsFactors = F, check.names = F)
names(oes)
oes <- read.csv('../data/oes_clean_nona.csv', stringsAsFactors = F, check.names = F)
oes$naics[1400:1700]
filterOES <- function(dta, state = NULL, naicsCode = NULL, industry = NULL, occupation = NULL){
if(!is.null(state)) {dta <- dplyr::filter(dta, area_title == state)}
if(!is.null(industry)) {dta <- dplyr::filter(dta, i_group == industry)}
if(!is.null(occupation)) {
if(stringr::str_detect(occupation, '^\\d')) {
dta <- dplyr::filter(dta, `occ code` == occupation)
} else {
dta <- dplyr::filter(dta, o_group == occupation)
}
}
if(!is.null(naicsCode)) {dta <- dplyr::filter(dta, stringr::str_detect(naics, naicsCode))}
return(dta)
}
getStateSector <- function(dta, state, industry = 'sector', occupation = '00-0000'){
dta %>%
filterOES(state, industry = industry, occupation = occupation) %>%
dplyr::arrange(
-tot_emp
)
}
getStateSector(oes, 'Pennsylvania')
countChildrenIndustry <- function(dta, naic, state, industry, occupation){
if(industry >= 6) return(0)
nCode <- stringr::str_extract(naic, paste0('^.{', industry, '}'))
iGroup <- paste0(industry + 1, '-digit')
nChildren <- dta %>%
filterOES(state, nCode, iGroup, occupation) %>%
.$naics %>%
unique %>%
length
nChildren
}
industryOccupation <- function(dta, naic, state, industry, occupation){
nCode <- stringr::str_extract(naic, paste0('^.{', industry, '}'))
iGroup <- paste0(industry, '-digit')
occupations <- dta %>%
filterOES(state, nCode, iGroup, occupation)
occupations
}
countIndustryOccupation <- function(dta, naic, state, industry, occupation){
nOccupations <- industryOccupation(dta, naic, state, industry, occupation) %>%
nrow()
nOccupations
}
industryOccupation(oes, '236000', 'Alaska', 3, 'major')
countIndustryOccupation(oes, '236000', 'Alaska', 3, 'major')
getIndustryHierarchy <- function(dta, state, naicsCode, industry = 3, occupation = 'major'){
if(industry <= 2) return("industry must be > 2")
if(stringr::str_detect(naicsCode, '-')){
naicsCode <- stringr::str_replace(naicsCode, '-', '|^' )
naicsCode <- paste0('^', naicsCode)
} else {
naicsCode <- stringr::str_extract(naicsCode, paste0('^.{', industry -1 ,'}'))
naicsCode <- paste0('^', naicsCode)
}
industryGroup <- paste0(industry, '-digit')
dta %>%
filterOES(state, naicsCode, industryGroup, occupation) %>%
dplyr::mutate(
a_mean = as.double(a_mean),
h_mean = as.double(h_mean),
a_calc_tot = tot_emp * a_mean,
h_calc_tot = tot_emp * h_mean
) %>%
dplyr::group_by(area_title, naics, naics_title, i_group) %>%
dplyr::summarise(
tot_emp = sum(tot_emp),
a_calc_mean = sum(a_calc_tot)/tot_emp,
h_calc_mean = sum(h_calc_tot)/tot_emp
) %>%
dplyr::ungroup() %>%
dplyr::mutate(hasChildren = purrr::map_dbl(naics, countChildrenIndustry, dta = dta, state = state, industry = industry, occupation = occupation)) %>%
dplyr::mutate(hasOccupations = purrr::map_dbl(naics, countIndustryOccupation, dta = dta, state = state, industry = industry, occupation = occupation))
}
getIndustryHierarchy(oes, 'Pennsylvania', '237130', industry=3)
children
childrenIndustries <- function(dta, naic, state, industry, occupation){
nCode <- stringr::str_extract(naic, paste0('^.{', industry, '}'))
iGroup <- paste0(industry + 1, '-digit')
children <- dta %>%
filterOES(state, nCode, iGroup, occupation)
}
childrenIndustries(oes, '236000', 'Pennsylvania', 3, 'major')
# children of naic
childrenIndustries <- function(dta, naic, state, industry, occupation){
nCode <- stringr::str_extract(naic, paste0('^.{', industry, '}'))
iGroup <- paste0(industry + 1, '-digit')
children <- dta %>%
filterOES(state, nCode, iGroup, occupation)
children
}
childrenIndustries(oes, '236000', 'Pennsylvania', 3, 'major')
oes$o_group
childrenIndustries(oes, '236000', 'Pennsylvania', 3, 'total')
countChildrenIndustry(oes, '236000', 'Pennsylvania', 3, 'total')
# children of naic
childrenIndustries <- function(dta, naic, state, industry, occupation = 'total'){
nCode <- stringr::str_extract(naic, paste0('^.{', industry, '}'))
iGroup <- paste0(industry + 1, '-digit')
children <- dta %>%
filterOES(state, nCode, iGroup, occupation)
children
}
childrenIndustries(oes, '236000', 'Pennsylvania', 3)
countChildrenIndustries <- function(dta, naic, state, industry, occupation = 'total'){
if(industry >= 6) return(0)
nChildren <- childrenIndustries(dta, naic, state, industry, occupation) %>%
nrow()
nChildren
}
childrenIndustries(oes, '236000', 'Pennsylvania', 3)
countChildrenIndustries(oes, '236000', 'Pennsylvania', 3)
usa <- readr::read_csv('https://gist.githubusercontent.com/officeofjane/2c3ed88c4be050d92765de912d71b7c4/raw/8abc5e19a5fac2ec63e81891d9bfdebe2d55f92c/publication-grids.csv')
usa <- readr::read_csv('https://gist.githubusercontent.com/officeofjane/2c3ed88c4be050d92765de912d71b7c4/raw/8abc5e19a5fac2ec63e81891d9bfdebe2d55f92c/publication-grids.csv')
usa$publication %>% unique
usa %>%
dplyr::filter(publication == 'Marshall Project')
usa %>%
dplyr::filter(publication == 'Marshall Project') %>%
.$state %>%
unique %>% sort
usa_states <- usa %>%
dplyr::filter(publication == 'Marshall Project') %>%
.$state %>%
unique %>% sort
oes_states
oes_states <- oes$area_title %>%
unique %>% sort
oes_states
usa_states
usa_states <- usa %>%
.$state %>%
unique %>% sort
usa_states
oes_states <- oes %>%
dplry::select(area_title) %>%
distinct()
oes_states <- oes %>%
dplyr::select(area_title) %>%
dplyr::distinct()
oes_states
usa_states <- usa %>%
dplyr::filter(publication== 'NPR')
usa_states
dplyr::left_join(oes_states, usa_states, c('area_title' = 'state'))
usa_states$state
usa_states$state %>% sort
usa_states <- usa %>%
dplyr::filter(publication== 'NPR') %>%
dplyr::mutate(state = stringr::str_replace(state, 'DC', 'District of Columbia'))
oes_states <- oes %>%
dplyr::select(area_title) %>%
dplyr::distinct()
dplyr::left_join(oes_states, usa_states, c('area_title' = 'state'))
usa_states %>%
ggplot2::ggplot() +
ggplot2::geom_rect(ggplot2::aes(xmin = col, xmax = col + 1, ymin = row,ymax = row + 1))
usa_states %>%
ggplot2::ggplot() +
ggplot2::geom_rect(ggplot2::aes(xmin = col, xmax = col + 1, ymin = row,ymax = row + 1), color = 'white')
usa_states %>%
ggplot2::ggplot() +
ggplot2::geom_rect(ggplot2::aes(xmin = col, xmax = col + 1, ymin = row,ymax = row + 1), color = 'white') +
ggplot2::scale_y_reverse()
usa_states
usa_states %>%
ggplot2::ggplot() +
ggplot2::geom_rect(ggplot2::aes(xmin = col, xmax = col + 1, ymin = row,ymax = row + 1), color = 'white') +
ggplot2::geom_text(ggplot2::aes(x = col + .5, y = row + .5, label = code)) +
ggplot2::scale_y_reverse()
usa_states %>%
ggplot2::ggplot() +
ggplot2::geom_rect(ggplot2::aes(xmin = col, xmax = col + 1, ymin = row,ymax = row + 1), color = 'white') +
ggplot2::geom_text(ggplot2::aes(x = col + .5, y = row + .5, label = code), color = 'white') +
ggplot2::scale_y_reverse()
usa_states %>%
ggplot2::ggplot() +
ggplot2::geom_rect(ggplot2::aes(xmin = col, xmax = col + 1, ymin = row,ymax = row + 1), color = 'white') +
ggplot2::geom_text(ggplot2::aes(x = col + .5, y = row + .5, label = code), color = 'white') +
ggplot2::scale_y_reverse() +
ggplot2::coord_equal()
usa_states %>%
ggplot2::ggplot() +
ggplot2::geom_rect(ggplot2::aes(xmin = col, xmax = col + 1, ymin = row,ymax = row + 1, fill = runif(nrow(.))), color = 'white') +
ggplot2::geom_text(ggplot2::aes(x = col + .5, y = row + .5, label = code), color = 'white') +
ggplot2::scale_y_reverse() +
ggplot2::coord_equal()
usa_states %>%
ggplot2::ggplot() +
ggplot2::geom_rect(ggplot2::aes(xmin = col, xmax = col + 1, ymin = row,ymax = row + 1, fill = length(row)), color = 'white') +
ggplot2::geom_text(ggplot2::aes(x = col + .5, y = row + .5, label = code), color = 'white') +
ggplot2::scale_y_reverse() +
ggplot2::coord_equal()
usa_states %>%
ggplot2::ggplot() +
ggplot2::geom_rect(ggplot2::aes(xmin = col, xmax = col + 1, ymin = row,ymax = row + 1, fill = runif(length(row))), color = 'white') +
ggplot2::geom_text(ggplot2::aes(x = col + .5, y = row + .5, label = code), color = 'white') +
ggplot2::scale_y_reverse() +
ggplot2::coord_equal()
usa_states
#not all publications include dc
usa_states <- usa %>%
dplyr::filter(publication== 'NPR') %>%
dplyr::mutate(state = stringr::str_replace(state, 'DC', 'District of Columbia')) %>%
dplyr::select(-id)
usa_states
#not all publications include dc
usa_states <- usa %>%
dplyr::filter(publication== 'NPR') %>%
dplyr::mutate(state = stringr::str_replace(state, 'DC', 'District of Columbia')) %>%
dplyr::select(-id, -publication)
usa_states
usa_states %>%
jsonlite::write_json('../data/npr_usa_grid.json')
getwd()
#confirm that most of OES is in GRID
dplyr::left_join(oes_states, usa_states, c('area_title' = 'state'))
oes
oes_no_na <- oes
#confirm that most of OES is in GRID
dplyr::left_join(oes_states, usa_states, c('area_title' = 'state'))
oes_only_main <- oes_no_na %>%
dplyr::filter(!area_title %in% c('Puerto Rico', 'Virgin Islands', 'Guam'))
oes_only_main
oes_only_main <- oes_no_na %>%
dplyr::filter(!area_title %in% c('Puerto Rico', 'Virgin Islands', 'Guam')) %>%
dplyr::select(-annual, -hourly)
names(oes_only_main)
oes_only_main <- oes_no_na %>%
dplyr::filter(!area_title %in% c('Puerto Rico', 'Virgin Islands', 'Guam')) %>%
dplyr::select(-annual, -hourly, -naics_head)
readr::write_csv(oes_only_main, '../data/oes_prod.csv')
?zip::zip
zip::zip('../data/oes_prod.zip', '../data/oes_prod.csv')
rm(oes_xls)
rm(oes)
rm(oes_no_na)
rm(oes_only_main)
oes <- unzip('../data/oes_prod.zip')
oe
oe
oes
zip::zip('../data/oes_research_2019_allsectors.zip', '../data/oes_research_2019_allsectors.xlsx')
oes <- read.csv('../data/oes_prod.csv', stringsAsFactors = F, check.names = F)
oes
head(oes)

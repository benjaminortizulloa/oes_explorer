arrange(-depth) %>%
ggplot() +
geom_rect(aes(xmin = col + depth - 1, ymin = row + depth -1, xmax = col + depth, ymax = row + depth, fill = as.character(depth)), col = 'black') +
geom_label(aes(x = col + .5 + depth - 1,
y = row + .5 + depth -1,
label = paste0('Row: ', row, '\nCol: ', col, "\nDepth: ", depth)),
size = 3,
fill= 'blue') +
scale_y_continuous(trans = 'reverse') +
theme_void() +
scale_fill_manual(values = c('1' = 'red', '2' = 'white', '3' = 'blue'))
array_df %>%
arrange(-depth) %>%
ggplot() +
geom_rect(aes(xmin = col + depth - 1, ymin = row + depth -1, xmax = col + depth, ymax = row + depth, fill = as.character(depth)), col = 'black') +
geom_label(aes(x = col + .5 + depth - 1,
y = row + .5 + depth -1,
label = paste0('Row: ', row, '\nCol: ', col, "\nDepth: ", depth)),
size = 3,
fill= 'blue',
color ='blue') +
scale_y_continuous(trans = 'reverse') +
theme_void() +
scale_fill_manual(values = c('1' = 'red', '2' = 'white', '3' = 'blue'))
array_df %>%
arrange(-depth) %>%
ggplot() +
geom_rect(aes(xmin = col + depth - 1, ymin = row + depth -1, xmax = col + depth, ymax = row + depth, fill = as.character(depth)), col = 'black') +
geom_label(aes(x = col + .5 + depth - 1,
y = row + .5 + depth -1,
label = paste0('Row: ', row, '\nCol: ', col, "\nDepth: ", depth)),
size = 3,
fill= 'blue',
label.size = 0) +
scale_y_continuous(trans = 'reverse') +
theme_void() +
scale_fill_manual(values = c('1' = 'red', '2' = 'white', '3' = 'blue'))
array_df %>%
arrange(-depth) %>%
ggplot() +
geom_rect(aes(xmin = col + depth - 1, ymin = row + depth -1, xmax = col + depth, ymax = row + depth, fill = as.character(depth)), col = 'black') +
geom_label(aes(x = col + .5 + depth - 1,
y = row + .5 + depth -1,
label = paste0('Row: ', row, '\nCol: ', col, "\nDepth: ", depth),
fill = as.character(depth)),
size = 3,
label.size = 0) +
scale_y_continuous(trans = 'reverse') +
theme_void() +
scale_fill_manual(values = c('1' = 'red', '2' = 'white', '3' = 'blue'))
array_df %>%
filter(depth == 1) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = paste0('Row: ', row, '\nCol: ', col))) +
scale_y_continuous(trans = 'reverse') +
theme_void()
array_df %>%
arrange(-depth) %>%
ggplot() +
geom_rect(aes(xmin = col + depth - 1, ymin = row + depth -1, xmax = col + depth, ymax = row + depth, fill = as.character(depth)), col = 'black') +
geom_label(aes(x = col + .5 + depth - 1,
y = row + .5 + depth -1,
label = paste0('Row: ', row, '\nCol: ', col, "\nDepth: ", depth),
fill = as.character(depth)),
size = 3,
label.size = 0) +
scale_y_continuous(trans = 'reverse') +
theme(legend.position = "none") +
theme_void() +
scale_fill_manual(values = c('1' = 'red', '2' = 'white', '3' = 'blue')) +
array_df %>%
arrange(-depth) %>%
ggplot() +
geom_rect(aes(xmin = col + depth - 1, ymin = row + depth -1, xmax = col + depth, ymax = row + depth, fill = as.character(depth)), col = 'black') +
geom_label(aes(x = col + .5 + depth - 1,
y = row + .5 + depth -1,
label = paste0('Row: ', row, '\nCol: ', col, "\nDepth: ", depth),
fill = as.character(depth)),
size = 3,
label.size = 0) +
scale_y_continuous(trans = 'reverse') +
theme(legend.position = "none") +
theme_void() +
scale_fill_manual(values = c('1' = 'red', '2' = 'white', '3' = 'blue'))
array_df %>%
arrange(-depth) %>%
ggplot() +
geom_rect(aes(xmin = col + depth - 1, ymin = row + depth -1, xmax = col + depth, ymax = row + depth, fill = as.character(depth)), col = 'black') +
geom_label(aes(x = col + .5 + depth - 1,
y = row + .5 + depth -1,
label = paste0('Row: ', row, '\nCol: ', col, "\nDepth: ", depth),
fill = as.character(depth)),
size = 3,
label.size = 0) +
scale_y_continuous(trans = 'reverse') +
theme_void() +
theme(legend.position = "none") +
scale_fill_manual(values = c('1' = 'red', '2' = 'white', '3' = 'blue'))
array_df %>%
arrange(-depth) %>%
ggplot() +
geom_rect(aes(xmin = col + depth - 1, ymin = row + depth -1, xmax = col + depth, ymax = row + depth, fill = as.character(depth)), col = 'black') +
geom_label(aes(x = col + .5 + depth - 1,
y = row + .5 + depth -1,
label = paste0('Row: ', row, '\nCol: ', col, "\nDepth: ", depth),
fill = as.character(depth)),
size = 3,
label.size = 0) +
scale_y_continuous(trans = 'reverse') +
theme_void() +
theme(legend.position = "none") +
scale_fill_manual(values = c('1' = 'red', '2' = 'green', '3' = 'blue'))
array_df %>%
arrange(-depth) %>%
ggplot() +
geom_rect(aes(xmin = col + depth - 1, ymin = row + depth -1, xmax = col + depth, ymax = row + depth, fill = as.character(depth)), col = 'black') +
geom_label(aes(x = col + .5 + depth - 1,
y = row + .5 + depth -1,
label = paste0('Row: ', row, '\nCol: ', col, "\nDepth: ", depth),
fill = as.character(depth)),
size = 3,
label.size = 0) +
scale_y_continuous(trans = 'reverse') +
theme_void() +
theme(legend.position = "none") +
scale_fill_manual(values = c('1' = '#d95f02', '2' = '#1b9e77', '3' = '#7570b3'))
clear
clear()
array_df %>%
arrange(-depth) %>%
ggplot() +
geom_rect(aes(xmin = col + depth - 1, ymin = row + depth -1, xmax = col + depth, ymax = row + depth, fill = as.character(depth)), col = 'black') +
geom_label(aes(x = col + .5 + depth - 1,
y = row + .5 + depth -1,
label = paste0('Row: ', row, '\nCol: ', col, "\nDepth: ", depth),
fill = as.character(depth)),
size = 4,
label.size = 0) +
scale_y_continuous(trans = 'reverse') +
theme_void() +
theme(legend.position = "none") +
scale_fill_manual(values = c('1' = '#d95f02', '2' = '#1b9e77', '3' = '#7570b3'))
array_df %>%
filter(depth == 1) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = paste0('Row: ', row, '\nCol: ', col))) +
scale_y_continuous(trans = 'reverse') +
theme_void()
array_df %>%
filter(depth == 1, row == 1) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = paste0('Row: ', row, '\nCol: ', col))) +
scale_y_continuous(trans = 'reverse') +
theme_void()
array_df %>%
filter(depth == 1, row == 1) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = paste0('Row: ', row, '\nCol: ', col))) +
scale_y_continuous(trans = 'reverse') +
theme_void() +
ylim(-1, 2)
array_df %>%
filter(depth == 1, row == 1) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = paste0('Row: ', row, '\nCol: ', col))) +
scale_y_continuous(trans = 'reverse') +
theme_void() +
ylim(-1, 3)
array_df %>%
filter(depth == 1, row == 1) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = paste0('Index: ', col))) +
scale_y_continuous(trans = 'reverse') +
theme_void() +
ylim(-1, 3)
tibble::tibble(
row = c(1,1,3,3),
col = c(1,3,1,3),
text = c('TRUE', 100, 3.14, "A string of text")
) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = paste0('Index: ', col)))
tibble::tibble(
row = c(1,1,3,3),
col = c(1,3,1,3),
text = c('TRUE', 100, 3.14, "A string of text")
) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = paste0('Index: ', col))) +
theme_void()
tibble::tibble(
row = c(1,1,3,3),
col = c(1,3,1,3),
text = c('TRUE', 100, 3.14, "A string of text")
) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = text)) +
theme_void()
tibble::tibble(
row = c(1,1,3,3),
col = c(1,3,1,3),
text = c('Logical: TRUE', "Integer: 100", "Double: 3.14", "Text: A string of text")
) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = text)) +
theme_void()
tibble::tibble(
row = c(1,1,3,3),
col = c(1,3,1,3),
text = c('bold(Logical:) TRUE', "Integer: 100", "Double: 3.14", "Text: A string of text")
) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = text), parse= T) +
theme_void()
tibble::tibble(
row = c(1,1,3,3),
col = c(1,3,1,3),
text = c('bold(Logical): TRUE', "Integer: 100", "Double: 3.14", "Text: A string of text")
) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = text), parse= T) +
theme_void()
tibble::tibble(
row = c(1,1,3,3),
col = c(1,3,1,3),
text = c('bold(Logical)italic(: TRUE)', "Integer: 100", "Double: 3.14", "Text: A string of text")
) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = text), parse= T) +
theme_void()
tibble::tibble(
row = c(1,1,3,3),
col = c(1,3,1,3),
text = c('bold(Logical) italic(: TRUE)', "Integer: 100", "Double: 3.14", "Text: A string of text")
) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = text), parse= T) +
theme_void()
?plotmath
tibble::tibble(
row = c(1,1,3,3),
col = c(1,3,1,3),
text = c('bold(Logical)~italic(: TRUE)', "Integer: 100", "Double: 3.14", "Text: A string of text")
) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = text), parse= T) +
theme_void()
tibble::tibble(
row = c(1,1,3,3),
col = c(1,3,1,3),
text = c('bold(Logical)~italic(\\: TRUE)', "Integer: 100", "Double: 3.14", "Text: A string of text")
) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = text), parse= T) +
theme_void()
tibble::tibble(
row = c(1,1,3,3),
col = c(1,3,1,3),
text = c('bold(Logical)~italic(\: TRUE)', "Integer: 100", "Double: 3.14", "Text: A string of text")
) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = text), parse= T) +
theme_void()
tibble::tibble(
row = c(1,1,3,3),
col = c(1,3,1,3),
text = c('bold(Logical)~:~TRUE', "Integer: 100", "Double: 3.14", "Text: A string of text")
) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = text), parse= T) +
theme_void()
Logical:
tibble::tibble(
row = c(1,1,3,3),
col = c(1,3,1,3),
text = c('Logical: TRUE', "Integer: 100", "Double: 3.14", "Text: A string of text")
) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = text)) +
theme_void()
tibble::tibble(
row = c(1,1,3,3),
col = c(1,3,1,3),
text = c('Logical: TRUE', "Integer: 100", "Double: 3.14", "Text: A string of text")
) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = text)) +
theme_void()
tibble::tibble(
row = c(1,1,2.5,2.5),
col = c(1,2.5,1,2.5),
text = c('Logical: TRUE', "Integer: 100", "Double: 3.14", "Text: A string of text")
) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = text)) +
theme_void()
array_df %>%
filter(depth == 1, row == 1) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = paste0('Index: ', col))) +
scale_y_continuous(trans = 'reverse') +
theme_void() +
ylim(-1, 3)
array_df %>%
filter(depth == 1) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = paste0('Row: ', row, '\nCol: ', col))) +
scale_y_continuous(trans = 'reverse') +
theme_void()
array_df %>%
arrange(-depth) %>%
ggplot() +
geom_rect(aes(xmin = col + depth - 1, ymin = row + depth -1, xmax = col + depth, ymax = row + depth, fill = as.character(depth)), col = 'black') +
geom_label(aes(x = col + .5 + depth - 1,
y = row + .5 + depth -1,
label = paste0('Row: ', row, '\nCol: ', col, "\nDepth: ", depth),
fill = as.character(depth)),
size = 4,
label.size = 0) +
scale_y_continuous(trans = 'reverse') +
theme_void() +
theme(legend.position = "none") +
scale_fill_manual(values = c('1' = '#d95f02', '2' = '#1b9e77', '3' = '#7570b3'))
intro_array[,1,1]
array_df %>%
filter(depth == 1, row == 1) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = paste0('Index: ', col))) +
scale_y_continuous(trans = 'reverse') +
theme_void() +
ylim(-1, 3)
intro_array[,1,1]
intro_array %% 2
intro_array[,1,1] %% 2 == 0
array_df %>% jsonlite::toJSON()
intro_array[,,1]
intro_array
volcano
volcano[1:10, 1:10]
plot(volcano)
dim(volcano)
raster::raster(volcano)
raster::raster(volcano) %>% plot()
raster::raster(volcano) %>% raster::plot()
vol_raster <- raster::raster(volcano)
library(raster)
vol_raster <- raster::raster(volcano)
vol_raster$layer
vol_raster[1:10]
vol_raster[1:10, 1:10]
?raster
raster::getData(vol_raster)
raster::values()
raster::values(vol_raster)
dim(vol_raster)
raster::values(vol_raster) %>% array(dim(vol_raster))
raster::values(vol_raster) %>% array(dim(vol_raster)) %>% .[1:10, 1:10]
raster::values(vol_raster) %>% array(dim(vol_raster)) %>% .[1:10, 1:10, 1]
volcano[1:10, 1:10]
dim(vol_raster)
raster::values(vol_raster) %>% array(dim(vol_raster)) %>%  t %>% .[:10, 1:10, 1]
raster::values(vol_raster) %>% array(dim(vol_raster)) %>% .[,,1] %>% t %>% .[:10, 1:10]
raster::values(vol_raster) %>% array(dim(vol_raster)) %>% .[,,1] %>% t %>% .[1:10, 1:10]
volcano[1:10, 1:10]
array_df %>%
filter(depth == 1, row == 1) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = paste0('Index: ', col))) +
scale_y_continuous(trans = 'reverse') +
theme_void() +
ylim(-1, 3)
array_df %>%
filter(depth == 1) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = paste0('Row: ', row, '\nCol: ', col))) +
scale_y_continuous(trans = 'reverse') +
theme_void()
raster(array_df[,,1]) %>% plot
raster(array_df[,,1]) %>% plot()
array_df[,,1]
raster(intro_array[,,1]) %>% plot()
raster(intro_array[,,1]) %>% values %>% matrix(c(5, 5))
raster(intro_array[,,1]) %>% values %>% matrix(c(5, 5), byrow = T)
array_df %>%
filter(depth == 1, row == 1) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = paste0('Index: ', col))) +
scale_y_continuous(trans = 'reverse') +
theme_void() +
ylim(-1, 3)
array_df %>%
filter(depth == 1) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = paste0('Row: ', row, '\nCol: ', col))) +
scale_y_continuous(trans = 'reverse') +
theme_void()
intro_array
array_df %>%
filter(depth == 1) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = paste0('Row: ', row, '\nCol: ', col))) +
scale_y_continuous(trans = 'reverse') +
theme_void()
array_df %>%
filter(depth == 1) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = paste0('Data: ', data))) +
scale_y_continuous(trans = 'reverse') +
theme_void()
?geom_raster
faithfuld
raster::raster(intro_array[,,1]) %>% plot
raster::raster(intro_array[,,1]) %>% plot(box = F)
raster::raster(intro_array[,,1]) %>% plot(boxes = F)
raster::raster(intro_array[,,1]) %>% plot(box = NA)
raster::raster(intro_array[,,1]) %>% plot(axes = F)
raster::raster(intro_array[,,1]) %>% plot(axes = F, box = F)
raster::raster(volcano) %>% plot(axes = F, box = F)
array_df %>%
filter(depth == 1) %>%
ggplot() +
geom_rect(aes(xmin = col, ymin = row, xmax = col + 1, ymax = row + 1), col = 'black', fill = 'white') +
geom_text(aes(x = col + .5, y = row + .5, label = paste0('Data: ', data))) +
scale_y_continuous(trans = 'reverse') +
theme_void()
raster::raster(intro_array[,,1]) %>% plot(axes = F, box = F)
raster::raster(volcano) %>% plot(axes = F, box = F)
raster::brick(intro_array)
raster::raster(intro_array[,,1])
c(1:25, matrix(1:25, ncol = 5, byrow =T))
iris3
iris
readr::write_csv(iris, 'iris.csv')
getwd()
install.packages('titanic')
Titanic
titanic::titanic_test
str(titanic::titanic_test )
readr::write_csv(titanic::titanic_test, 'titanic_test.csv')
dir()
install.packages('xkcd')
?xkcd::`xkcd-package`
library(ggplot2)
download.file("http://simonsoftware.se/other/xkcd.ttf", dest="xkcd.ttf", mode="wb")
SYSTEM("mkdir ~/.fonts")
system("mkdir ~/.fonts")
system("cp xkcd.ttf ~/.fonts")
font_import(pattern = "[X/x]kcd", prompt=FALSE)
extrafont::font_import(pattern = "[X/x]kcd", prompt=FALSE)
extrafont::font_import(pattern = "xkcd", prompt=FALSE)
extrafont::font_import(pattern = "xkcd")
extrafont::font_import()
extrafont::font_import(pattern = "x")
extrafont::font_import(pattern = "^x")
extrafont::font_import(pattern = "^w")
extrafont::font_import(pattern = "^x")
extrafont::font_import(pattern = "^x", prompt = F)
extrafont::ttf_import(pattern = '^x')
extrafont::ttf_import(pattern = '^y')
extrafont::ttf_import(paths = 'xkcd.ttf')
extrafont::font_import(paths = 'xkcd.ttf')
extrafont::font_import(paths = 'C:\Users\benjamin.a.ortiz\AppData\Local\Microsoft\Windows\Fonts\xkcd.ttf')
extrafont::font_import(paths = 'C://Users/benjamin.a.ortiz/AppData/Local/Microsoft/Windows/Fonts/xkcd.ttf)
extrafont::font_import(paths = 'C://Users/benjamin.a.ortiz/AppData/Local/Microsoft/Windows/Fonts/xkcd.ttf')
windowsFont('xkcd')
?windowsFont
windowsFont('Arial')
windowsFont('Arial uni')
font_import(paths = getwd(), pattern = "[X/x]kcd", prompt=FALSE)
extrafont::font_import(paths = getwd(), pattern = "[X/x]kcd", prompt=FALSE)
getwd()
system("cp xkcd.ttf ~/.fonts")
dir.create('.fonts')
system("cp xkcd.ttf ~/.fonts")
file.copy('xkcd.ttf', '.fonts/xkcd.ttf')
extrafont::font_import(paths = getwd(), pattern = "[X/x]kcd", prompt=FALSE)
extrafont::font_import(paths = getwd(), pattern = "[X/x]kcd")
source('~/Code/LongtermProjects/oes_explorer/api/code/api/main.R', echo=TRUE)
getwd('')
getwd()
setwd('Code/LongtermProjects/oes_explorer/api/code/api/')
source('~/Code/LongtermProjects/oes_explorer/api/code/api/main.R', echo=TRUE)
